// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using user_service.data.Db;

#nullable disable

namespace user_service.data.Migrations
{
    [DbContext(typeof(UserServiceDbContext))]
    partial class UserServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("user_service.domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("LivingPlace")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.HasAlternateKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00695ec1-8ed0-4781-a432-9fdd98bd6cde"),
                            Email = "nonauthenticated@test.com",
                            FirstName = "Non",
                            LastName = "Authenticated",
                            LivingPlace = "Beograd, Srbija",
                            Password = "AMhtGKXzeetCyumUykEQ2R0YxxLzYTJPzeQbaLQeseWBqf8bQiEmcUQV/0XRUkvQUA==",
                            Role = "Nonauthenticated",
                            Username = "nonauthenticated"
                        },
                        new
                        {
                            Id = new Guid("422bd1e1-6d70-42cc-adc6-89a09b313c01"),
                            Email = "guest@test.com",
                            FirstName = "Guest",
                            LastName = "Guest",
                            LivingPlace = "Novi Sad, Srbija",
                            Password = "AHD4mlEmnCAhyWDp4D6H3lcLzr5WVROCnshsLiuitVapL7GWNshdiY4pFElnRqN0qQ==",
                            Role = "Guest",
                            Username = "guest"
                        },
                        new
                        {
                            Id = new Guid("87abe34c-9935-44c4-aad5-af82f9442c77"),
                            Email = "host@test.com",
                            FirstName = "Host",
                            LastName = "Host",
                            LivingPlace = "Sabac, Srbija",
                            Password = "AEYedJWK/IHAD3NNv03runGcGLeN1CDKyKZS8ni/3x3gFKP8AwN5m+F2vX2kH/McjQ==",
                            Role = "Host",
                            Username = "host"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
